
Nginx初探:
	Nginx是什么:
		Nginx(engine X)是一个开源、轻量级、高性能的HTTP和反向代理服务器,可以代理HTTP、IMAP/POP3/SMTP和TCP/UDP协议;其特点是占用内存少,并发能力强,采用C语言编写,所以在性能方面有一定保证.Nginx是一个俄罗斯人伊戈尔·赛索耶夫开发的,第一个公开版本0.1.0发布于2004年10月;截止到2017年7月11日,最新稳定版是1.12.
		与Nginx同类的Web服务有IIS、Apache、Tomcat等.

	Nginx特性与基本功能:
		特性:
			模块化设计
			低内存消耗,高并发
			事件驱动,AIO
			高可靠性,master与worker架构
			支持热更新配置、日志文件滚动、平滑升级 
			丰富的扩展模块
		基本功能:
			静态资源Web服务器 
			基于IP、用户的访问控制 
			基于域名/IP/端口的虚拟主机 
			HTTP/HTTPS、SMTP、POP3和TCP/UDP反向代理
			负载均衡
			页面缓存
			支持代理FastCGI、uWSGI等应用服务器 
			支持gzip、expires
			URL Rewrite
			路径别名
			支持访问速率、并发限制  
			等...
			
	Nginx架构:
		Nginx架构:
			图片(Nginx-架构)
		Nginx软件架构:
			主进程(master process):
				1.主要与外界通信和工作进程管理;
				2.读取nginx配置文件并验证有效性;
				3.建立、绑定和关闭socket;
				4.按照配置文件生成、管理和结束工作进程;
				5.nginx重启、停止、重载配置文件、平滑升级、管理日志文件等。

			工作进程(worker process):
				1.接收客户端请求,将请求交给各个功能模块处理; 
				2.系统IO调用,获取响应的数据,发送响应给客户端; 
				3.数据缓存管理;
				4.接收主进程指令,比如重启、关闭等

			缓存索引重建及管理进程(cache loader & cache manager):
				cache模块,主要由缓存索引重建(cache loader)和缓存索引管理(cache manager)两个进程完成,缓存索引重建进程是在进程在nginx服务启动一段时间之后(默认是1分钟)由主进程生成,对本地磁盘的索引文件在内存中建 立元数据库,包括扫描、过期更新等操作,完成后退出.

	Nginx与Apache对比:
		Nginx轻量级,比Apache占用内存更少,尤其是prefork模型;
		Nginx更抗并发,单机支持10万+QPS,Nginx处理请求是异步非阻塞的,而Aapche是阻塞的; 
		Nginx采用多进程工作模式,而Apache有多进程和多进程多线程两种工作模式;
		Nginx高度模块化设计,有很多丰富的模块,更好的扩展性;
		Apache历史悠久(在九几年就已经流行了),稳定性要比Nginx高;
		采用网络I/O模型不同,Apache采用select,Nginx在Linux2.6+上采用epoll.

	网络IO模型:
		简单来说,网络I/O是用户态和内核态之间的数据交换。
		一次网络数据读取操作,大概是这样的: 应用进程通过系统调用(read)->由用户态转到内核态->内核将请求的数据发送到内核缓冲区->应用进程查看内核 缓冲区是否有数据->如果有则把数据拷贝到用户态->完成I/O操作
			阻塞
			非阻塞
			同步
			异步
			IO多路复用:
				IO多路复用技术是一种消息通知模式,基于事件驱动,常用有select、poll、epoll几种系统函数实现
				图片(IO多路复用)

		图片(网络IO模型)

	HTTP协议:
		1.浏览器地址栏输入网址(URL,统一资源定位符);
		2.浏览器DNS服务器解析到域名的真实IP;
		3.向真实IP 80端口发起TCP连接,完成三次握手;
		4.封装HTTP数据,发送HTTP请求,包括HTTP方法、资源地址、浏览器本身信息等;
		5.Web服务器处理HTTP请求,返回请求资源的数据给客户端。浏览器接收到数据后渲染展示;
		6.关闭TCP连接.

		图片(HTTP协议)
